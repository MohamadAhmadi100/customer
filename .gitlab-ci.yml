stages:
  - build
  - test
  - push
  - deploy


build:
  stage: build
  only:
    - dev
  tags:
    - ci-jon
  script:
    - echo APP_NAME=$APP_NAME >> .env
    - echo SMS_SENDER_NUMBER=$SMS_SENDER_NUMBER >> .env
    - echo SMS_API_TOKEN=$SMS_API_TOKEN >> .env
    - echo SMS_TEMPLATE=$SMS_TEMPLATE >> .env
    - echo MONGO_HOST=$MONGO_HOST >> .env
    - echo MONGO_PORT=$MONGO_PORT >> .env
    - echo MONGO_USER=$MONGO_USER >> .env
    - echo MONGO_PASS=$MONGO_PASS >> .env
    - echo REDIS_HOST=$REDIS_HOST >> .env
    - echo REDIS_PORT=$REDIS_PORT >> .env
    - echo REDIS_USER=$REDIS_USER >> .env
    - echo REDIS_PASS=$REDIS_PASS >> .env
    - echo REDIS_DB=$REDIS_DB >> .env
    - echo RABBIT_HOST=$RABBIT_HOST >> .env
    - echo RABBIT_PORT=$RABBIT_PORT >> .env
    - echo RABBIT_USER=$RABBIT_USER >> .env
    - echo RABBIT_PASS=$RABBIT_PASS >> .env
    - docker login 200.100.100.219:80 -u registry -p $REGPASS 
    - docker build -t customer:0.0.1 .
test:
  stage: test
  only:
    - dev
  tags:
    - ci-jon
    
dev_deploy:
  stage: deploy
  only:
    - dev
  tags:
    - ci-jon
  script:
    - echo APP_NAME=$APP_NAME >> .env
    - echo SMS_SENDER_NUMBER=$SMS_SENDER_NUMBER >> .env
    - echo SMS_API_TOKEN=$SMS_API_TOKEN >> .env
    - echo SMS_TEMPLATE=$SMS_TEMPLATE >> .env
    - echo MONGO_HOST=$MONGO_HOST >> .env
    - echo MONGO_PORT=$MONGO_PORT >> .env
    - echo MONGO_USER=$MONGO_USER >> .env
    - echo MONGO_PASS=$MONGO_PASS >> .env
    - echo REDIS_HOST=$REDIS_HOST >> .env
    - echo REDIS_PORT=$REDIS_PORT >> .env
    - echo REDIS_USER=$REDIS_USER >> .env
    - echo REDIS_PASS=$REDIS_PASS >> .env
    - echo REDIS_DB=$REDIS_DB >> .env
    - echo RABBIT_HOST=$RABBIT_HOST >> .env
    - echo RABBIT_PORT=$RABBIT_PORT >> .env
    - echo RABBIT_USER=$RABBIT_USER >> .env
    - echo RABBIT_PASS=$RABBIT_PASS >> .env
    - docker login 200.100.100.219:80 -u registry -p $REGPASS
    - docker-compose -f docker-compose.yaml up -d --build

push:
  stage: push
  only:
    - master
  tags:
    - ci-jon
  script:
    - docker login 200.100.100.219:80 -u registry -p $REGPASS
    - docker build -t customer:0.0.1 . -t 200.100.100.219:80/backend/web-customer:$CI_COMMIT_SHORT_SHA
    - docker push 200.100.100.219:80/backend/web-customer:$CI_COMMIT_SHORT_SHA

master_deploy:
  stage: deploy
  only:
    - master
  tags:
    - ci-jon
  script:
    - docker login 200.100.100.219:80 -u registry -p $REGPASS
    - docker run -p 8000:80 customer:0.0.1
